<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>FireKnight-HJ</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-01-13T08:35:25.687Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>fireknight</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>hexo_next_blog搭建</title>
    <link href="http://example.com/2022/01/13/hexo-next-blog%E6%90%AD%E5%BB%BA/"/>
    <id>http://example.com/2022/01/13/hexo-next-blog%E6%90%AD%E5%BB%BA/</id>
    <published>2022-01-13T07:44:54.000Z</published>
    <updated>2022-01-13T08:35:25.687Z</updated>
    
    <content type="html"><![CDATA[<p>搭建hexo，NexT主题博客时收集到的部分内容</p><span id="more"></span><h3 id="添加鼠标点击效果"><a href="#添加鼠标点击效果" class="headerlink" title="添加鼠标点击效果"></a>添加鼠标点击效果</h3><p>基本copy该网址内容，但是其实只需要改动_layout.swig即可，没必要新建swig文件</p><p><a href="https://blog.csdn.net/qq_42889280/article/details/103087564">https://blog.csdn.net/qq_42889280/article/details/103087564</a></p><p>在主题theme/next的 <code>_config.yml</code> 中添加动态配置项</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cursor_effect:</span><br><span class="line">  enabled: true</span><br><span class="line">  type: love  # fireworks：礼花 | explosion：爆炸 | love：浮出爱心 | text：浮出文字</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在 /themes/next/layout/_layout.swig，添加如下代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if theme.cursor_effect %&#125;</span><br><span class="line">  &#123;% if theme.cursor_effect.type == &quot;fireworks&quot; %&#125;</span><br><span class="line">    &lt;script src=&quot;/js/cursor/fireworks.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">  &#123;% elseif theme.cursor_effect.type == &quot;explosion&quot; %&#125;</span><br><span class="line">    &lt;canvas class=&quot;fireworks&quot; style=&quot;position: fixed;left: 0;top: 0;z-index: 1; pointer-events: none;&quot; &gt;&lt;/canvas&gt;</span><br><span class="line">    &lt;script src=&quot;//cdn.bootcss.com/animejs/2.2.0/anime.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">    &lt;script src=&quot;/js/cursor/explosion.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">  &#123;% elseif theme.cursor_effect.type == &quot;love&quot; %&#125;</span><br><span class="line">    &lt;script src=&quot;/js/cursor/love.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">  &#123;% elseif theme.cursor_effect.type == &quot;text&quot; %&#125;</span><br><span class="line">    &lt;script src=&quot;/js/cursor/text.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">  &#123;% endif %&#125;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><p>添加时注意：粘到body标签里面</p><p>将以下四个JS文件复制到目录 /themes/next/source/js/cursor/ 下</p><p>fireworks.js</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br></pre></td><td class="code"><pre><span class="line">class Circle &#123;</span><br><span class="line">  constructor(&#123; origin, speed, color, angle, context &#125;) &#123;</span><br><span class="line">    this.origin = origin</span><br><span class="line">    this.position = &#123; ...this.origin &#125;</span><br><span class="line">    this.color = color</span><br><span class="line">    this.speed = speed</span><br><span class="line">    this.angle = angle</span><br><span class="line">    this.context = context</span><br><span class="line">    this.renderCount = 0</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  draw() &#123;</span><br><span class="line">    this.context.fillStyle = this.color</span><br><span class="line">    this.context.beginPath()</span><br><span class="line">    this.context.arc(this.position.x, this.position.y, 2, 0, Math.PI * 2)</span><br><span class="line">    this.context.fill()</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  move() &#123;</span><br><span class="line">    this.position.x = (Math.sin(this.angle) * this.speed) + this.position.x</span><br><span class="line">    this.position.y = (Math.cos(this.angle) * this.speed) + this.position.y + (this.renderCount * 0.3)</span><br><span class="line">    this.renderCount++</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class Boom &#123;</span><br><span class="line">  constructor (&#123; origin, context, circleCount = 16, area &#125;) &#123;</span><br><span class="line">    this.origin = origin</span><br><span class="line">    this.context = context</span><br><span class="line">    this.circleCount = circleCount</span><br><span class="line">    this.area = area</span><br><span class="line">    this.stop = false</span><br><span class="line">    this.circles = []</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  randomArray(range) &#123;</span><br><span class="line">    const length = range.length</span><br><span class="line">    const randomIndex = Math.floor(length * Math.random())</span><br><span class="line">    return range[randomIndex]</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  randomColor() &#123;</span><br><span class="line">    const range = [&#x27;8&#x27;, &#x27;9&#x27;, &#x27;A&#x27;, &#x27;B&#x27;, &#x27;C&#x27;, &#x27;D&#x27;, &#x27;E&#x27;, &#x27;F&#x27;]</span><br><span class="line">    return &#x27;#&#x27; + this.randomArray(range) + this.randomArray(range) + this.randomArray(range) + this.randomArray(range) + this.randomArray(range) + this.randomArray(range)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  randomRange(start, end) &#123;</span><br><span class="line">    return (end - start) * Math.random() + start</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  init() &#123;</span><br><span class="line">    for(let i = 0; i &lt; this.circleCount; i++) &#123;</span><br><span class="line">      const circle = new Circle(&#123;</span><br><span class="line">        context: this.context,</span><br><span class="line">        origin: this.origin,</span><br><span class="line">        color: this.randomColor(),</span><br><span class="line">        angle: this.randomRange(Math.PI - 1, Math.PI + 1),</span><br><span class="line">        speed: this.randomRange(1, 6)</span><br><span class="line">      &#125;)</span><br><span class="line">      this.circles.push(circle)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  move() &#123;</span><br><span class="line">    this.circles.forEach((circle, index) =&gt; &#123;</span><br><span class="line">      if (circle.position.x &gt; this.area.width || circle.position.y &gt; this.area.height) &#123;</span><br><span class="line">        return this.circles.splice(index, 1)</span><br><span class="line">      &#125;</span><br><span class="line">      circle.move()</span><br><span class="line">    &#125;)</span><br><span class="line">    if (this.circles.length == 0) &#123;</span><br><span class="line">      this.stop = true</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  draw() &#123;</span><br><span class="line">    this.circles.forEach(circle =&gt; circle.draw())</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">class CursorSpecialEffects &#123;</span><br><span class="line">  constructor() &#123;</span><br><span class="line">    this.computerCanvas = document.createElement(&#x27;canvas&#x27;)</span><br><span class="line">    this.renderCanvas = document.createElement(&#x27;canvas&#x27;)</span><br><span class="line"></span><br><span class="line">    this.computerContext = this.computerCanvas.getContext(&#x27;2d&#x27;)</span><br><span class="line">    this.renderContext = this.renderCanvas.getContext(&#x27;2d&#x27;)</span><br><span class="line"></span><br><span class="line">    this.globalWidth = window.innerWidth</span><br><span class="line">    this.globalHeight = window.innerHeight</span><br><span class="line"></span><br><span class="line">    this.booms = []</span><br><span class="line">    this.running = false</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  handleMouseDown(e) &#123;</span><br><span class="line">    const boom = new Boom(&#123;</span><br><span class="line">      origin: &#123; x: e.clientX, y: e.clientY &#125;,</span><br><span class="line">      context: this.computerContext,</span><br><span class="line">      area: &#123;</span><br><span class="line">        width: this.globalWidth,</span><br><span class="line">        height: this.globalHeight</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    boom.init()</span><br><span class="line">    this.booms.push(boom)</span><br><span class="line">    this.running || this.run()</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  handlePageHide() &#123;</span><br><span class="line">    this.booms = []</span><br><span class="line">    this.running = false</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  init() &#123;</span><br><span class="line">    const style = this.renderCanvas.style</span><br><span class="line">    style.position = &#x27;fixed&#x27;</span><br><span class="line">    style.top = style.left = 0</span><br><span class="line">    style.zIndex = &#x27;999999999999999999999999999999999999999999&#x27;</span><br><span class="line">    style.pointerEvents = &#x27;none&#x27;</span><br><span class="line"></span><br><span class="line">    style.width = this.renderCanvas.width = this.computerCanvas.width = this.globalWidth</span><br><span class="line">    style.height = this.renderCanvas.height = this.computerCanvas.height = this.globalHeight</span><br><span class="line"></span><br><span class="line">    document.body.append(this.renderCanvas)</span><br><span class="line"></span><br><span class="line">    window.addEventListener(&#x27;mousedown&#x27;, this.handleMouseDown.bind(this))</span><br><span class="line">    window.addEventListener(&#x27;pagehide&#x27;, this.handlePageHide.bind(this))</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  run() &#123;</span><br><span class="line">    this.running = true</span><br><span class="line">    if (this.booms.length == 0) &#123;</span><br><span class="line">      return this.running = false</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    requestAnimationFrame(this.run.bind(this))</span><br><span class="line"></span><br><span class="line">    this.computerContext.clearRect(0, 0, this.globalWidth, this.globalHeight)</span><br><span class="line">    this.renderContext.clearRect(0, 0, this.globalWidth, this.globalHeight)</span><br><span class="line"></span><br><span class="line">    this.booms.forEach((boom, index) =&gt; &#123;</span><br><span class="line">      if (boom.stop) &#123;</span><br><span class="line">        return this.booms.splice(index, 1)</span><br><span class="line">      &#125;</span><br><span class="line">      boom.move()</span><br><span class="line">      boom.draw()</span><br><span class="line">    &#125;)</span><br><span class="line">    this.renderContext.drawImage(this.computerCanvas, 0, 0, this.globalWidth, this.globalHeight)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">const cursorSpecialEffects = new CursorSpecialEffects()</span><br><span class="line">cursorSpecialEffects.init()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>explosion.min.js</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&quot;use strict&quot;;function updateCoords(e)&#123;pointerX=(e.clientX||e.touches[0].clientX)-canvasEl.getBoundingClientRect().left,pointerY=e.clientY||e.touches[0].clientY-canvasEl.getBoundingClientRect().top&#125;function setParticuleDirection(e)&#123;var t=anime.random(0,360)*Math.PI/180,a=anime.random(50,180),n=[-1,1][anime.random(0,1)]*a;return&#123;x:e.x+n*Math.cos(t),y:e.y+n*Math.sin(t)&#125;&#125;function createParticule(e,t)&#123;var a=&#123;&#125;;return a.x=e,a.y=t,a.color=colors[anime.random(0,colors.length-1)],a.radius=anime.random(16,32),a.endPos=setParticuleDirection(a),a.draw=function()&#123;ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,0,2*Math.PI,!0),ctx.fillStyle=a.color,ctx.fill()&#125;,a&#125;function createCircle(e,t)&#123;var a=&#123;&#125;;return a.x=e,a.y=t,a.color=&quot;#F00&quot;,a.radius=0.1,a.alpha=0.5,a.lineWidth=6,a.draw=function()&#123;ctx.globalAlpha=a.alpha,ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,0,2*Math.PI,!0),ctx.lineWidth=a.lineWidth,ctx.strokeStyle=a.color,ctx.stroke(),ctx.globalAlpha=1&#125;,a&#125;function renderParticule(e)&#123;for(var t=0;t&lt;e.animatables.length;t++)&#123;e.animatables[t].target.draw()&#125;&#125;function animateParticules(e,t)&#123;for(var a=createCircle(e,t),n=[],i=0;i&lt;numberOfParticules;i++)&#123;n.push(createParticule(e,t))&#125;anime.timeline().add(&#123;targets:n,x:function(e)&#123;return e.endPos.x&#125;,y:function(e)&#123;return e.endPos.y&#125;,radius:0.1,duration:anime.random(1200,1800),easing:&quot;easeOutExpo&quot;,update:renderParticule&#125;).add(&#123;targets:a,radius:anime.random(80,160),lineWidth:0,alpha:&#123;value:0,easing:&quot;linear&quot;,duration:anime.random(600,800)&#125;,duration:anime.random(1200,1800),easing:&quot;easeOutExpo&quot;,update:renderParticule,offset:0&#125;)&#125;function debounce(e,t)&#123;var a;return function()&#123;var n=this,i=arguments;clearTimeout(a),a=setTimeout(function()&#123;e.apply(n,i)&#125;,t)&#125;&#125;var canvasEl=document.querySelector(&quot;.fireworks&quot;);if(canvasEl)&#123;var ctx=canvasEl.getContext(&quot;2d&quot;),numberOfParticules=30,pointerX=0,pointerY=0,tap=&quot;mousedown&quot;,colors=[&quot;#FF1461&quot;,&quot;#18FF92&quot;,&quot;#5A87FF&quot;,&quot;#FBF38C&quot;],setCanvasSize=debounce(function()&#123;canvasEl.width=2*window.innerWidth,canvasEl.height=2*window.innerHeight,canvasEl.style.width=window.innerWidth+&quot;px&quot;,canvasEl.style.height=window.innerHeight+&quot;px&quot;,canvasEl.getContext(&quot;2d&quot;).scale(2,2)&#125;,500),render=anime(&#123;duration:1/0,update:function()&#123;ctx.clearRect(0,0,canvasEl.width,canvasEl.height)&#125;&#125;);document.addEventListener(tap,function(e)&#123;&quot;sidebar&quot;!==e.target.id&amp;&amp;&quot;toggle-sidebar&quot;!==e.target.id&amp;&amp;&quot;A&quot;!==e.target.nodeName&amp;&amp;&quot;IMG&quot;!==e.target.nodeName&amp;&amp;(render.play(),updateCoords(e),animateParticules(pointerX,pointerY))&#125;,!1),setCanvasSize(),window.addEventListener(&quot;resize&quot;,setCanvasSize,!1)&#125;&quot;use strict&quot;;function updateCoords(e)&#123;pointerX=(e.clientX||e.touches[0].clientX)-canvasEl.getBoundingClientRect().left,pointerY=e.clientY||e.touches[0].clientY-canvasEl.getBoundingClientRect().top&#125;function setParticuleDirection(e)&#123;var t=anime.random(0,360)*Math.PI/180,a=anime.random(50,180),n=[-1,1][anime.random(0,1)]*a;return&#123;x:e.x+n*Math.cos(t),y:e.y+n*Math.sin(t)&#125;&#125;function createParticule(e,t)&#123;var a=&#123;&#125;;return a.x=e,a.y=t,a.color=colors[anime.random(0,colors.length-1)],a.radius=anime.random(16,32),a.endPos=setParticuleDirection(a),a.draw=function()&#123;ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,0,2*Math.PI,!0),ctx.fillStyle=a.color,ctx.fill()&#125;,a&#125;function createCircle(e,t)&#123;var a=&#123;&#125;;return a.x=e,a.y=t,a.color=&quot;#F00&quot;,a.radius=0.1,a.alpha=0.5,a.lineWidth=6,a.draw=function()&#123;ctx.globalAlpha=a.alpha,ctx.beginPath(),ctx.arc(a.x,a.y,a.radius,0,2*Math.PI,!0),ctx.lineWidth=a.lineWidth,ctx.strokeStyle=a.color,ctx.stroke(),ctx.globalAlpha=1&#125;,a&#125;function renderParticule(e)&#123;for(var t=0;t&lt;e.animatables.length;t++)&#123;e.animatables[t].target.draw()&#125;&#125;function animateParticules(e,t)&#123;for(var a=createCircle(e,t),n=[],i=0;i&lt;numberOfParticules;i++)&#123;n.push(createParticule(e,t))&#125;anime.timeline().add(&#123;targets:n,x:function(e)&#123;return e.endPos.x&#125;,y:function(e)&#123;return e.endPos.y&#125;,radius:0.1,duration:anime.random(1200,1800),easing:&quot;easeOutExpo&quot;,update:renderParticule&#125;).add(&#123;targets:a,radius:anime.random(80,160),lineWidth:0,alpha:&#123;value:0,easing:&quot;linear&quot;,duration:anime.random(600,800)&#125;,duration:anime.random(1200,1800),easing:&quot;easeOutExpo&quot;,update:renderParticule,offset:0&#125;)&#125;function debounce(e,t)&#123;var a;return function()&#123;var n=this,i=arguments;clearTimeout(a),a=setTimeout(function()&#123;e.apply(n,i)&#125;,t)&#125;&#125;var canvasEl=document.querySelector(&quot;.fireworks&quot;);if(canvasEl)&#123;var ctx=canvasEl.getContext(&quot;2d&quot;),numberOfParticules=30,pointerX=0,pointerY=0,tap=&quot;mousedown&quot;,colors=[&quot;#FF1461&quot;,&quot;#18FF92&quot;,&quot;#5A87FF&quot;,&quot;#FBF38C&quot;],setCanvasSize=debounce(function()&#123;canvasEl.width=2*window.innerWidth,canvasEl.height=2*window.innerHeight,canvasEl.style.width=window.innerWidth+&quot;px&quot;,canvasEl.style.height=window.innerHeight+&quot;px&quot;,canvasEl.getContext(&quot;2d&quot;).scale(2,2)&#125;,500),render=anime(&#123;duration:1/0,update:function()&#123;ctx.clearRect(0,0,canvasEl.width,canvasEl.height)&#125;&#125;);document.addEventListener(tap,function(e)&#123;&quot;sidebar&quot;!==e.target.id&amp;&amp;&quot;toggle-sidebar&quot;!==e.target.id&amp;&amp;&quot;A&quot;!==e.target.nodeName&amp;&amp;&quot;IMG&quot;!==e.target.nodeName&amp;&amp;(render.play(),updateCoords(e),animateParticules(pointerX,pointerY))&#125;,!1),setCanvasSize(),window.addEventListener(&quot;resize&quot;,setCanvasSize,!1)&#125;;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>love.min.js</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">!function(e,t,a)&#123;function n()&#123;c(&quot;.heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: &#x27;&#x27;;width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;&quot;),o(),r()&#125;function r()&#123;for(var e=0;e&lt;d.length;e++)d[e].alpha&lt;=0?(t.body.removeChild(d[e].el),d.splice(e,1)):(d[e].y--,d[e].scale+=.004,d[e].alpha-=.013,d[e].el.style.cssText=&quot;left:&quot;+d[e].x+&quot;px;top:&quot;+d[e].y+&quot;px;opacity:&quot;+d[e].alpha+&quot;;transform:scale(&quot;+d[e].scale+&quot;,&quot;+d[e].scale+&quot;) rotate(45deg);background:&quot;+d[e].color+&quot;;z-index:99999&quot;);requestAnimationFrame(r)&#125;function o()&#123;var t=&quot;function&quot;==typeof e.onclick&amp;&amp;e.onclick;e.οnclick=function(e)&#123;t&amp;&amp;t(),i(e)&#125;&#125;function i(e)&#123;var a=t.createElement(&quot;div&quot;);a.className=&quot;heart&quot;,d.push(&#123;el:a,x:e.clientX-5,y:e.clientY-5,scale:1,alpha:1,color:s()&#125;),t.body.appendChild(a)&#125;function c(e)&#123;var a=t.createElement(&quot;style&quot;);a.type=&quot;text/css&quot;;try&#123;a.appendChild(t.createTextNode(e))&#125;catch(t)&#123;a.styleSheet.cssText=e&#125;t.getElementsByTagName(&quot;head&quot;)[0].appendChild(a)&#125;function s()&#123;return&quot;rgb(&quot;+~~(255*Math.random())+&quot;,&quot;+~~(255*Math.random())+&quot;,&quot;+~~(255*Math.random())+&quot;)&quot;&#125;var d=[];e.requestAnimationFrame=function()&#123;return e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||function(e)&#123;setTimeout(e,1e3/60)&#125;&#125;(),n()&#125;(window,document);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>text.js</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">var a_idx = 0;</span><br><span class="line">jQuery(document).ready(function($) &#123;</span><br><span class="line">  $(&quot;body&quot;).click(function(e) &#123;</span><br><span class="line">    var a = new Array(&quot;富强&quot;, &quot;民主&quot;, &quot;文明&quot;, &quot;和谐&quot;, &quot;自由&quot;, &quot;平等&quot;, &quot;公正&quot; ,&quot;法治&quot;, &quot;爱国&quot;, &quot;敬业&quot;, &quot;诚信&quot;, &quot;友善&quot;);</span><br><span class="line">    var $i = $(&quot;&lt;span/&gt;&quot;).text(a[a_idx]);</span><br><span class="line">    var x = e.pageX,</span><br><span class="line">      y = e.pageY;</span><br><span class="line">    $i.css(&#123;</span><br><span class="line">      &quot;z-index&quot;: 99999,</span><br><span class="line">      &quot;top&quot;: y - 28,</span><br><span class="line">      &quot;left&quot;: x - a[a_idx].length * 8,</span><br><span class="line">      &quot;position&quot;: &quot;absolute&quot;,</span><br><span class="line">      &quot;color&quot;: &quot;#ff7a45&quot;</span><br><span class="line">    &#125;);</span><br><span class="line">    $(&quot;body&quot;).append($i);</span><br><span class="line">    $i.animate(&#123;</span><br><span class="line">      &quot;top&quot;: y - 180,</span><br><span class="line">      &quot;opacity&quot;: 0</span><br><span class="line">    &#125;, 1500, function() &#123;</span><br><span class="line">      $i.remove();</span><br><span class="line">    &#125;);</span><br><span class="line">    a_idx = (a_idx + 1) % a.length;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Next添加数学公式支持"><a href="#Next添加数学公式支持" class="headerlink" title="Next添加数学公式支持"></a>Next添加数学公式支持</h3><p>有效解决方案：<a href="https://xiaozhoua.top/2021/04/13/Blog/%E6%97%A0%E6%B3%95%E6%98%BE%E7%A4%BALatex%E5%85%AC%E5%BC%8F/">https://xiaozhoua.top/2021/04/13/Blog/%E6%97%A0%E6%B3%95%E6%98%BE%E7%A4%BALatex%E5%85%AC%E5%BC%8F/</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;搭建hexo，NexT主题博客时收集到的部分内容&lt;/p&gt;</summary>
    
    
    
    
    <category term="blog" scheme="http://example.com/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>RSA 加密体制破译</title>
    <link href="http://example.com/2022/01/12/RSA_breaking/"/>
    <id>http://example.com/2022/01/12/RSA_breaking/</id>
    <published>2022-01-12T04:03:55.000Z</published>
    <updated>2022-01-13T08:25:55.387Z</updated>
    
    <content type="html"><![CDATA[<p>首届（2016）全国高校密码数学挑战赛</p><span id="more"></span><p><strong>赛题三：RSA 加密体制破译</strong></p><p>​    <strong>1 问题描述</strong></p><pre><code>     有人制作了一个 RSA 加解密软件（采用的 RSA 体制的参数特点描 述见密码背景部分）。已知该软件发送某个明文的所有参数和加密过 程的全部数据（加密案例文件详见附件 3-1）。Alice 使用该软件发送 了一个通关密语，且所有加密数据已经被截获，请问能否仅从加密数 据恢复该通关密语及 RSA 体制参数？如能请给出原文和参数，如不能 请给出已恢复部分并说明剩余部分不能恢复的理由？</code></pre><p>​    <strong>2.求解过程</strong></p><p>​        本次实验通过多种RSA攻击策略还原了13个Frame片段的明文。</p><h2 id="用到的RSA攻击方法"><a href="#用到的RSA攻击方法" class="headerlink" title="用到的RSA攻击方法"></a>用到的RSA攻击方法</h2><h3 id="1-公共模数攻击"><a href="#1-公共模数攻击" class="headerlink" title="1.公共模数攻击"></a>1.公共模数攻击</h3><p><em>攻击条件：</em>当两个用户使用相同模数N，不同私钥，加密同一明文消息时存在此攻击</p><p><em>攻击原理：</em></p><p>设两用户公钥为$e_1,e_2$，二者互质。明文消息$m$，密文$c1，c2$则有：</p><script type="math/tex; mode=display">c_1=m^{e1}mod\ N</script><script type="math/tex; mode=display">c_2=m^{e2}mod\ N</script><p>当$Adversary$截获了$c_1,c_2$后，可以用扩展欧几里得算法计算：$re_1+se_2=1\ mod\ n $的两个整数$r$和$s$，由此：</p><script type="math/tex; mode=display">\begin{align}c_1^rc_2^s &=m^{re_1}m^{se_2}\ mod\ n\\&=m^{re_1+se_2}\ mod\ n\\&=m\ mod\ n\end{align}</script><p>共模攻击代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">公共模数攻击,输入对应frame序号a,b</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sameModulAttack</span>(<span class="params">a,b</span>):</span></span><br><span class="line">    <span class="keyword">if</span> ns[a]!=ns[b]:</span><br><span class="line">        <span class="keyword">return</span>-<span class="number">1</span></span><br><span class="line">    e1,e2,c1,c2,n = <span class="built_in">int</span>(es[a], <span class="number">16</span>),<span class="built_in">int</span>(es[b], <span class="number">16</span>),<span class="built_in">int</span>(cs[a], <span class="number">16</span>),<span class="built_in">int</span>(cs[b], <span class="number">16</span>),<span class="built_in">int</span>(ns[a],<span class="number">16</span>)</span><br><span class="line">    <span class="comment">#r*e1+s*e2=g(g=1)mod n，其中rs有一个是负的</span></span><br><span class="line">    g,r,s = egcd(e1, e2)</span><br><span class="line">    <span class="comment">#这里pow不能算负多少次方于是吧那个负项拆成了c^&#123;s&#125;=c^&#123;-1*s&#125;=(c^&#123;-1&#125;)^s</span></span><br><span class="line">    <span class="keyword">if</span> r&lt;<span class="number">0</span>:</span><br><span class="line">        r = - r</span><br><span class="line">        c1 = gmpy2.invert(c1, n)</span><br><span class="line">    <span class="keyword">elif</span> s&lt;<span class="number">0</span>:</span><br><span class="line">        s = - s</span><br><span class="line">        c2 = gmpy2.invert(c2, n)</span><br><span class="line">    <span class="comment">#message解出来就是此处的m</span></span><br><span class="line">    m = <span class="built_in">pow</span>(c1,r,n)*<span class="built_in">pow</span>(c2,s,n) % n</span><br><span class="line">    <span class="comment">#print(m)</span></span><br><span class="line">    <span class="built_in">print</span>(binascii.a2b_hex(<span class="built_in">hex</span>(m)[<span class="number">2</span>:]))</span><br><span class="line">    <span class="keyword">return</span> binascii.a2b_hex(<span class="built_in">hex</span>(m)[<span class="number">2</span>:])</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="2-低加密指数广播攻击"><a href="#2-低加密指数广播攻击" class="headerlink" title="2.低加密指数广播攻击"></a>2.低加密指数广播攻击</h3><p><em>攻击条件：</em>选取的加密指数$e$较小，并且使用相同的加密指数给一个接收者群发送了相同的信息</p><p><em>攻击原理：</em></p><p>例如选取接收者群有三个成员的情况：</p><script type="math/tex; mode=display">c_1=m^e\ mod\ n_1\\c_2=m^e\ mod\ n_2\\c_3=m^e\ mod\ n_3</script><p>对上述几个等式，用中国剩余定理求解，可以得到：</p><script type="math/tex; mode=display">c_x =N_1N_1^{-1}c_1+N_2N_2^{-1}c_2+N_3N_3^{-1}c_3\ mod\ N\ \ \ (N=n_1n_2n_3)</script><p>又当e=3时，可以求得：</p><script type="math/tex; mode=display">m=\sqrt[3]{c_x}</script><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">低加密指数爆破攻击（广播攻击）</span></span><br><span class="line"><span class="string">c1 = m^5 mod N1</span></span><br><span class="line"><span class="string">c2 = m^5 mod N2</span></span><br><span class="line"><span class="string">c3 = m^5 mod N3</span></span><br><span class="line"><span class="string">c4 = m^5 mod N4</span></span><br><span class="line"><span class="string">c5 = m^5 mod N5</span></span><br><span class="line"><span class="string">用中国剩余定理解出m^5，之后开五次根即求出m</span></span><br><span class="line"><span class="string">这种也只有在几个m相同的情况下有的算</span></span><br><span class="line"><span class="string">Frame3,Frame8,Frame12,Frame16,Frame20采用低加密指数e=5进行加密，恰好能够进行爆破</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">lowEburp5</span>():</span></span><br><span class="line">    sessions = [[<span class="built_in">int</span>(cs[<span class="number">3</span>],<span class="number">16</span>),<span class="built_in">int</span>(ns[<span class="number">3</span>],<span class="number">16</span>)],[<span class="built_in">int</span>(cs[<span class="number">8</span>],<span class="number">16</span>),<span class="built_in">int</span>(ns[<span class="number">8</span>],<span class="number">16</span>)],[<span class="built_in">int</span>(cs[<span class="number">12</span>],<span class="number">16</span>),<span class="built_in">int</span>(ns[<span class="number">12</span>],<span class="number">16</span>)],[<span class="built_in">int</span>(cs[<span class="number">16</span>],<span class="number">16</span>),<span class="built_in">int</span>(ns[<span class="number">16</span>],<span class="number">16</span>)],[<span class="built_in">int</span>(cs[<span class="number">20</span>],<span class="number">16</span>),<span class="built_in">int</span>(ns[<span class="number">20</span>],<span class="number">16</span>)]]</span><br><span class="line">    ret,N = chinese_remainder_theorem(sessions)</span><br><span class="line">    ans = gmpy2.iroot(ret,<span class="number">5</span>)</span><br><span class="line">    <span class="built_in">print</span>(binascii.a2b_hex(<span class="built_in">hex</span>(ans[<span class="number">0</span>])[<span class="number">2</span>:]))</span><br><span class="line">    <span class="keyword">return</span> binascii.a2b_hex(<span class="built_in">hex</span>(ans[<span class="number">0</span>])[<span class="number">2</span>:])</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="3-因数碰撞攻击"><a href="#3-因数碰撞攻击" class="headerlink" title="3.因数碰撞攻击"></a>3.因数碰撞攻击</h3><p><em>攻击条件</em>：获取到两个公钥参数$N_1，N_2$ 不互素的密文信息</p><p><em>攻击原理</em>：</p><p>当存在两个公钥的$ N_1，N_2$ 不互素时，我们显然可以直接对这两个数求最大公因数，获得二者的共同的p然后直接获得$ q=n/p$，进而获得相应的私钥。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">因数碰撞攻击</span></span><br><span class="line"><span class="string">当存在两个公钥的 N 不互素时，我们显然可以直接对这两个数求最大公因数，然后直接获得 p，q，进而获得相应的私钥。</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_factor_pairs</span>():</span></span><br><span class="line">    pairs = []</span><br><span class="line">    <span class="comment"># 遍历每个组合，找到有最大公约数不为1的n1，n2对</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(ns)):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(i+<span class="number">1</span>,<span class="built_in">len</span>(ns)):</span><br><span class="line">            ni = <span class="built_in">int</span>(ns[i],<span class="number">16</span>)</span><br><span class="line">            nj = <span class="built_in">int</span>(ns[j],<span class="number">16</span>)</span><br><span class="line">            <span class="keyword">if</span> ni == nj:</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">if</span> gmpy2.gcd(ni,nj)!=<span class="number">1</span>:</span><br><span class="line">                pairs.append([i,j,gmpy2.gcd(ni,nj)])</span><br><span class="line">    <span class="comment"># print打印pairs</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> pairs:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;出现碰撞的frame序号为 &quot;</span>,i[<span class="number">0</span>],<span class="string">&quot; &quot;</span>,i[<span class="number">1</span>],<span class="string">&quot; 公因数为 &quot;</span>,i[<span class="number">2</span>])</span><br><span class="line">    <span class="keyword">return</span> pairs</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">sameFactorAttack</span>(<span class="params">i,j</span>):</span></span><br><span class="line">    <span class="comment"># 对pairs中的每个组合进行破解</span></span><br><span class="line">    ni = <span class="built_in">int</span>(ns[i], <span class="number">16</span>); nj = <span class="built_in">int</span>(ns[j], <span class="number">16</span>)</span><br><span class="line">    ci = <span class="built_in">int</span>(cs[i], <span class="number">16</span>); cj = <span class="built_in">int</span>(cs[j], <span class="number">16</span>)</span><br><span class="line">    ei = <span class="built_in">int</span>(es[i], <span class="number">16</span>); ej = <span class="built_in">int</span>(es[j], <span class="number">16</span>)</span><br><span class="line">    <span class="comment"># 求ni nj公因数得到p</span></span><br><span class="line">    p = gmpy2.gcd(ni,nj)</span><br><span class="line">    qi = ni//p</span><br><span class="line">    qj = nj//p</span><br><span class="line">    <span class="comment"># 根据欧拉定理，求phi</span></span><br><span class="line">    phi_i = (p-<span class="number">1</span>)*(qi-<span class="number">1</span>)</span><br><span class="line">    phi_j = (p-<span class="number">1</span>)*(qj-<span class="number">1</span>)</span><br><span class="line">    <span class="comment"># 由ed = 1 mod phi可以得到 d = e^-1 mod phi</span></span><br><span class="line">    di = gmpy2.invert(ei,phi_i)</span><br><span class="line">    dj = gmpy2.invert(ej,phi_j)</span><br><span class="line">    <span class="comment"># 明文m = c^d mod n</span></span><br><span class="line">    mi = gmpy2.powmod(ci,di,ni)</span><br><span class="line">    mj = gmpy2.powmod(cj,dj,nj)</span><br><span class="line">    <span class="built_in">print</span>(binascii.a2b_hex(<span class="built_in">hex</span>(mi)[<span class="number">2</span>:]))</span><br><span class="line">    <span class="built_in">print</span>(binascii.a2b_hex(<span class="built_in">hex</span>(mj)[<span class="number">2</span>:]))</span><br><span class="line">    <span class="keyword">return</span> binascii.a2b_hex(<span class="built_in">hex</span>(mi)[<span class="number">2</span>:]),binascii.a2b_hex(<span class="built_in">hex</span>(mj)[<span class="number">2</span>:])</span><br></pre></td></tr></table></figure><h3 id="4-费马分解法：p-q分解"><a href="#4-费马分解法：p-q分解" class="headerlink" title="4.费马分解法：p-q分解"></a>4.费马分解法：p-q分解</h3><p><em>攻击条件：</em>p或q选择不当：|p-q|较小</p><p><em>攻击原理：</em></p><p>由如下式子：</p><script type="math/tex; mode=display">\frac{(p+q)^2}{4}-n=\frac{(p+q)^2}{4}-pq=\frac{(p-q)^2}{4}</script><p>可以看到，$|p-q|$较小时，$\frac{(p-q)^2}{4}$也较小，从而$\frac{(p+q)^2}{4}$只是比$n$稍微大了一点点，从而$\frac{p+q}{2}$与$\sqrt{n}$相近。那么我们可以：</p><ul><li>顺序检查$\sqrt{n}$的每一个整数$x$，直到找到一个$x$使得$x^2-n$是平方数，记为$y^2$</li><li>那么$x^2-n=y^2$，进而根据平方差公式即可分解$N$</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fermat_pq_get_p</span>(<span class="params">n</span>):</span></span><br><span class="line">    <span class="comment"># 定义一个较小（也没有很小）的常数b</span></span><br><span class="line">    b = math.factorial(<span class="number">2</span>**<span class="number">14</span>)</span><br><span class="line">    <span class="comment"># 从u0 = sqrt(n)开始遍历</span></span><br><span class="line">    u0 = gmpy2.iroot(n,<span class="number">2</span>)[<span class="number">0</span>]+<span class="number">1</span></span><br><span class="line">    i=<span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> i &lt; b-<span class="number">1</span>:</span><br><span class="line">        u = (u0+i)*(u0+i)-n</span><br><span class="line">        <span class="comment"># 如果u是某个数的平方张，则u为y^2，u0+i为x</span></span><br><span class="line">        <span class="keyword">if</span> gmpy2.is_square(u):</span><br><span class="line">            v=gmpy2.isqrt(u)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        i+=<span class="number">1</span></span><br><span class="line">    <span class="comment"># 此时p，q为x-y 和 x+y，我们返回x+y的值</span></span><br><span class="line">    <span class="keyword">return</span> (u0+i)+v</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fermart_crack</span>(<span class="params">i</span>):</span></span><br><span class="line">    n = <span class="built_in">int</span>(ns[i], <span class="number">16</span>)</span><br><span class="line">    c = <span class="built_in">int</span>(cs[i], <span class="number">16</span>)</span><br><span class="line">    e = <span class="built_in">int</span>(es[i], <span class="number">16</span>)</span><br><span class="line">    <span class="comment"># 分解n得到p，q</span></span><br><span class="line">    p = fermat_pq_get_p(n)</span><br><span class="line">    q = n//p</span><br><span class="line">    <span class="comment"># 根据欧拉定理，求phi</span></span><br><span class="line">    phi = (p-<span class="number">1</span>)*(q-<span class="number">1</span>)</span><br><span class="line">    <span class="comment"># 由ed = 1 mod phi可以得到 d = e^-1 mod phi</span></span><br><span class="line">    d = gmpy2.invert(e,phi)</span><br><span class="line">    <span class="comment"># 明文m = c^d mod n</span></span><br><span class="line">    m = gmpy2.powmod(c,d,n)</span><br><span class="line">    <span class="built_in">print</span>(binascii.a2b_hex(<span class="built_in">hex</span>(m)[<span class="number">2</span>:]))</span><br><span class="line">    <span class="keyword">return</span> binascii.a2b_hex(<span class="built_in">hex</span>(m)[<span class="number">2</span>:])</span><br></pre></td></tr></table></figure><h3 id="5-pollard-p-1分解法"><a href="#5-pollard-p-1分解法" class="headerlink" title="5.pollard p-1分解法"></a>5.pollard p-1分解法</h3><p>攻击条件：适用于$p-1$或$q-1$能够被小素数整除的情况，通过此分解法可以找到一个因子$d$满足$d|n$</p><p>攻击原理：</p><p>寻找一个整数k，k要满足(p-1)|k!，由欧拉定理可以得知，若a和p互素：</p><script type="math/tex; mode=display">a^{p-1}=1\ mod\ p</script><p>即：</p><script type="math/tex; mode=display">a^{k!}=1\ mod\ p</script><p>则：$p|(a^{k!}-1)$，这样的话，$n$和$(a^{k!}-1)$必由一个公因数p，这样的话只需求$p=gcd(n,a^{k!}-1)$，之后就能够轻易地分解出n来了。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">Pollard p-1 分解法</span></span><br><span class="line"><span class="string">适用于p-1或q-1能够被小素数整除的情况</span></span><br><span class="line"><span class="string">通过此分解法可以找到一个因子d|n</span></span><br><span class="line"><span class="string">原理是找到一个满足(p-1)|k!的整数k，由fermart小定理，a^p-1=1 mod p ----&gt; p|(a^k!-1)</span></span><br><span class="line"><span class="string">这样n与(a^k!-1)有公因数p，n被分解出来</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">pollard_p_1</span>(<span class="params">n</span>):</span></span><br><span class="line">    m = <span class="number">2</span></span><br><span class="line">    <span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>,n):</span><br><span class="line">        <span class="comment"># 此时每次遍历，m=2^(k!)</span></span><br><span class="line">        m = <span class="built_in">pow</span>(m,k,n)</span><br><span class="line">        <span class="comment"># 找到一个k使得p|(a^k!-1)，即(a^k!-1)与n有公因数p</span></span><br><span class="line">        <span class="keyword">if</span> gmpy2.gcd(m - <span class="number">1</span>, n) != <span class="number">1</span>:</span><br><span class="line">            <span class="comment"># 返回p</span></span><br><span class="line">            <span class="keyword">return</span> gmpy2.gcd(m - <span class="number">1</span>, n)</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">(github上原文的内容有问题，解不出来)</span></span><br><span class="line"><span class="string">0.固定一个整数B=2**20</span></span><br><span class="line"><span class="string">1.选择一个整数k，k为满足b&lt;=B的大部分或者全部b的乘积，可以选：k = B!</span></span><br><span class="line"><span class="string">2.选择一个随机整数a：2&lt;a&lt;n-2</span></span><br><span class="line"><span class="string">3.计算r = a^k mod n</span></span><br><span class="line"><span class="string">4.计算d = gcd(r-1,n)</span></span><br><span class="line"><span class="string">5.如果d=1或d=n,回到1，否则我们找到d为一个因子</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="comment"># def pollard_p_1(n):</span></span><br><span class="line"><span class="comment">#     B = 2**20</span></span><br><span class="line"><span class="comment">#     while True:</span></span><br><span class="line"><span class="comment">#         k = math.factorial(B)</span></span><br><span class="line"><span class="comment">#         a = random.randint(3,n-2)</span></span><br><span class="line"><span class="comment">#         r = a**k%n</span></span><br><span class="line"><span class="comment">#         d = gmpy2.gcd(r-1,n)</span></span><br><span class="line"><span class="comment">#         if d==1 or d==n:</span></span><br><span class="line"><span class="comment">#             continue</span></span><br><span class="line"><span class="comment">#         return d</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">p1_crack</span>(<span class="params">i</span>):</span></span><br><span class="line">    n = <span class="built_in">int</span>(ns[i], <span class="number">16</span>)</span><br><span class="line">    c = <span class="built_in">int</span>(cs[i], <span class="number">16</span>)</span><br><span class="line">    e = <span class="built_in">int</span>(es[i], <span class="number">16</span>)</span><br><span class="line">    <span class="comment"># 分解n得到d=p，之后算q</span></span><br><span class="line">    p = pollard_p_1(n)</span><br><span class="line">    q = n//p</span><br><span class="line">    phi = (p-<span class="number">1</span>)*(q-<span class="number">1</span>)</span><br><span class="line">    <span class="comment"># 由ed = 1 mod phi可以得到 d = e^-1 mod phi</span></span><br><span class="line">    d = gmpy2.invert(e,phi)</span><br><span class="line">    <span class="comment"># 明文m = c^d mod n</span></span><br><span class="line">    m = gmpy2.powmod(c,d,n)</span><br><span class="line">    <span class="built_in">print</span>(binascii.a2b_hex(<span class="built_in">hex</span>(m)[<span class="number">2</span>:]))</span><br><span class="line">    <span class="keyword">return</span> binascii.a2b_hex(<span class="built_in">hex</span>(m)[<span class="number">2</span>:])</span><br></pre></td></tr></table></figure><h2 id="分析Frame文件，进行RSA攻击"><a href="#分析Frame文件，进行RSA攻击" class="headerlink" title="分析Frame文件，进行RSA攻击"></a>分析Frame文件，进行RSA攻击</h2><ul><li>Frame0和Frame4的模数N相同，假设这两片段对应的明文内容相同，则可以使用公共模数攻击的方法</li><li>Frame1和Frame18的模数N具有公共因子，可以通过因数碰撞法还原明文</li><li>Frame3，Frame8，Frame12，Frame16和Frame20采用低加密指数<code>e=5</code>进行加密</li><li>Frame7，Frame11，Frame15采用低加密指数<code>e=3</code>进行加密</li><li>Frame10 经尝试后发现其p，q选择较为接近，采用费马分解法(p-q法)进行破解</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">数据读取</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">readFrames</span>():</span></span><br><span class="line">    ns = []</span><br><span class="line">    cs = []</span><br><span class="line">    es = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">21</span>):</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;RSA大礼包/frame_set/Frame&quot;</span>+<span class="built_in">str</span>(i), <span class="string">&quot;r&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            tmp = f.read()</span><br><span class="line">            ns.append(tmp[<span class="number">0</span>:<span class="number">256</span>])</span><br><span class="line">            es.append(tmp[<span class="number">256</span>:<span class="number">512</span>])</span><br><span class="line">            cs.append(tmp[<span class="number">512</span>:<span class="number">768</span>])</span><br><span class="line">    <span class="keyword">return</span> ns,cs,es</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    ns,cs,es = readFrames()</span><br><span class="line">    pt = [<span class="string">&quot;&quot;</span>]*<span class="built_in">len</span>(ns)</span><br><span class="line">    <span class="comment">#针对Frame0和Frame4，构建共模攻击函数</span></span><br><span class="line">    pt[<span class="number">4</span>] = sameModulAttack(<span class="number">0</span>, <span class="number">4</span>)</span><br><span class="line">    pt[<span class="number">0</span>]=pt[<span class="number">4</span>]</span><br><span class="line">    <span class="comment">#针对Frame1和Frame18，构造因数碰撞函数</span></span><br><span class="line">    pairs = get_factor_pairs()</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> pairs:</span><br><span class="line">        pt[i[<span class="number">0</span>]],pt[i[<span class="number">1</span>]] = sameFactorAttack(i[<span class="number">0</span>],i[<span class="number">1</span>])</span><br><span class="line">    <span class="comment">#针对Frame10采用费马分解法(p-q法)进行破解</span></span><br><span class="line">    pt[<span class="number">10</span>] = fermart_crack(<span class="number">10</span>)</span><br><span class="line">    <span class="comment">#针对Frame2,Frame6,Frame19,构造Pollard p-1分解函数分解</span></span><br><span class="line">    pt[<span class="number">2</span>] = p1_crack(<span class="number">2</span>)</span><br><span class="line">    pt[<span class="number">6</span>] = p1_crack(<span class="number">6</span>)</span><br><span class="line">    pt[<span class="number">19</span>] = p1_crack(<span class="number">19</span>)</span><br><span class="line">    <span class="comment">#针对Frame3,Frame8,Frame12,Frame16,Frame20采用低加密指数e=5进行加密，恰好能够进行爆破</span></span><br><span class="line">    pt[<span class="number">3</span>] = lowEburp5()</span><br><span class="line">    pt[<span class="number">8</span>] = pt[<span class="number">3</span>]</span><br><span class="line">    pt[<span class="number">12</span>] = pt[<span class="number">3</span>]</span><br><span class="line">    pt[<span class="number">16</span>] = pt[<span class="number">3</span>]</span><br><span class="line">    pt[<span class="number">20</span>] = pt[<span class="number">3</span>]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 展示结果</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(pt)):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Frame &quot;</span>,i,<span class="string">&quot; 破译结果为：&quot;</span>,pt[i][-<span class="number">8</span>:])</span><br></pre></td></tr></table></figure><p>​    <strong>3.实验结果</strong></p><p>程序运行的结果如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">b&#x27;\x98vT2\x10\xab\xcd\xef\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00My secre&#x27;</span><br><span class="line">出现碰撞的frame序号为  1   18  公因数为  72732681634</span><br><span class="line">65293471933643674908027120929096536045429682300347130226398442391418956862476173798834057392247872274441320512158525416407044516675402521694747</span><br><span class="line">b&#x27;\x98vT2\x10\xab\xcd\xef\x00\x00\x00\x0b\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00. Imagin&#x27;</span><br><span class="line">b&#x27;\x98vT2\x10\xab\xcd\xef\x00\x00\x00\n\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00m A to B&#x27;</span><br><span class="line">b&#x27;\x98vT2\x10\xab\xcd\xef\x00\x00\x00\x08\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00will get&#x27;</span><br><span class="line">b&#x27;\x98vT2\x10\xab\xcd\xef\x00\x00\x00\x06\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 That is&#x27;</span><br><span class="line">b&#x27;\x98vT2\x10\xab\xcd\xef\x00\x00\x00\x07\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00 &quot;Logic &#x27;</span><br><span class="line">b&#x27;\x98vT2\x10\xab\xcd\xef\x00\x00\x00\x05\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00instein.&#x27;</span><br><span class="line">b&#x27;\x98vT2\x10\xab\xcd\xef\x00\x00\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00t is a f&#x27;</span><br><span class="line"></span><br><span class="line">Frame  0  破译结果为： b&#x27;My secre&#x27;</span><br><span class="line">Frame  1  破译结果为： b&#x27;. Imagin&#x27;</span><br><span class="line">Frame  2  破译结果为： b&#x27; That is&#x27;</span><br><span class="line">Frame  3  破译结果为： b&#x27;t is a f&#x27;</span><br><span class="line">Frame  4  破译结果为： b&#x27;My secre&#x27;</span><br><span class="line">Frame  5  破译结果为： </span><br><span class="line">Frame  6  破译结果为： b&#x27; &quot;Logic &#x27;</span><br><span class="line">Frame  7  破译结果为： </span><br><span class="line">Frame  8  破译结果为： b&#x27;t is a f&#x27;</span><br><span class="line">Frame  9  破译结果为： </span><br><span class="line">Frame  10  破译结果为： b&#x27;will get&#x27;</span><br><span class="line">Frame  11  破译结果为： </span><br><span class="line">Frame  12  破译结果为： b&#x27;t is a f&#x27;</span><br><span class="line">Frame  13  破译结果为： </span><br><span class="line">Frame  14  破译结果为： </span><br><span class="line">Frame  15  破译结果为： </span><br><span class="line">Frame  16  破译结果为： b&#x27;t is a f&#x27;</span><br><span class="line">Frame  17  破译结果为： </span><br><span class="line">Frame  18  破译结果为： b&#x27;m A to B&#x27;</span><br><span class="line">Frame  19  破译结果为： b&#x27;instein.&#x27;</span><br><span class="line">Frame  20  破译结果为： b&#x27;t is a f&#x27;</span><br><span class="line"></span><br><span class="line">进程已结束，退出代码 0</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>​    <strong>4.总结</strong></p><p>通过完成本次大作业我学习了一些针对RSA算法的攻击方式，收获很大。同时我了解到即便 RSA 算法目前来说是安全可靠的，但是错误的应用场景，错误的环境配置，以及错误的使用方法都会导致 RSA 的算法体系出现问题，因此日后学习过程中遇到相关的问题时要多留心思考研究，以免出现疏漏。</p><p>​    <strong>5.参考</strong></p><p><a href="https://www.tr0y.wang/2017/11/06/CTFRSA/#例题-6">https://www.tr0y.wang/2017/11/06/CTFRSA/#%E4%BE%8B%E9%A2%98-6</a> </p><p><a href="https://www.tr0y.wang/2017/10/31/RSA2016/">https://www.tr0y.wang/2017/10/31/RSA2016/</a>  </p><p><a href="https://github.com/blank-vax/RSA_breaking">https://github.com/blank-vax/RSA_breaking</a>  </p>]]></content>
    
    
    <summary type="html">&lt;p&gt;首届（2016）全国高校密码数学挑战赛&lt;/p&gt;</summary>
    
    
    
    
    <category term="密码学" scheme="http://example.com/tags/%E5%AF%86%E7%A0%81%E5%AD%A6/"/>
    
    <category term="作业" scheme="http://example.com/tags/%E4%BD%9C%E4%B8%9A/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/2022/01/12/hello-world/"/>
    <id>http://example.com/2022/01/12/hello-world/</id>
    <published>2022-01-11T17:33:36.569Z</published>
    <updated>2022-01-13T07:15:32.382Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><span id="more"></span><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
</feed>
